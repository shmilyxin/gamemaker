<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>biankuang_spt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/**
边框事件操作模式
0 大地图模式 可执行操作 方向键 上下左右 坐标移动 J 选择单位 K 打开面板 
1 面板模式 可执行操作 方向键 左右 选择按钮 J 点击按钮 K 关闭面板
2 单位选择模式 可执行操作 方向键 上下左右 坐标移动 J 选择移动位置 K 取消选择
3 单位移动模式 可执行操作 K 取消移动
4 面板模式转换中 可执行操作 无

**/
enum bkActionMode{
    selectMode = 0,
    btnMode = 1,
    unitSelectMode = 2,
    unitMoveMode = 3,
    btnChangeMode = 4,
    unitActiveMode = 5
}
mode = bkActionMode.selectMode;//面板操作模式 0 代表当前操作地图 1代表当前操作面板
btnChangeNextMode = undefined;
allBtnList = ds_list_create();
activeBtnList = ds_list_create();
stateControl = undefined;
selectedBtn = undefined;

btnChangeStep = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mode = bkActionMode.btnChangeMode){
    var select = global.instanceMap[? 'select'];
    var size = ds_list_size(id.activeBtnList);
    for(var i = 0;i&lt;size;i++){
        scr_changeBtnImage(id.activeBtnList[|i]);
    }
    if(btnChangeStep == 0){
        btnChangeStep = 1;
        scr_stopSelect(select);
        alarm[0]=5;
    }else if(btnChangeStep = 1){
        btnChangeStep = 2;
        var firstBtn = id.activeBtnList[|0];
        firstBtn.image_index+=1;
        firstBtn.selected = 1;
        id.selectedBtn = firstBtn;
        if(!is_undefined(id.btnChangeNextMode)){
            mode = id.btnChangeNextMode;
            id.btnChangeNextMode = undefined;
        }
    }else if(btnChangeStep = 2){
        btnChangeStep = 3;
        id.selectedBtn = undefined;
        alarm[0]=5;
    }else if(btnChangeStep = 3){
        btnChangeStep = 0;
        id.selectedBtn = undefined;
        ds_list_clear(id.activeBtnList);
        if(!is_undefined(id.btnChangeNextMode)){
            mode = id.btnChangeNextMode;
            id.btnChangeNextMode = undefined;
        }
        scr_startSelect(select);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
var str = "";
var str1 = "";
var str2 = "";
var str3 = "";
/**
        var btnTemp = id.allBtnList[|0];
    str+="btn index:" + string(btnTemp.index)+" ";
    str+="btn type:" + string(btnTemp.type)+" ";
    str+="btn image:" + string(btnTemp.image_index)+" ";
    str+="btn select:" + string(btnTemp.selected)+" ";
         btnTemp = id.allBtnList[|1];
    str1+="btn index:" + string(btnTemp.index)+" ";
    str1+="btn type:" + string(btnTemp.type)+" ";
    str1+="btn image:" + string(btnTemp.image_index)+" ";
    str1+="btn select:" + string(btnTemp.selected)+" ";
         btnTemp = id.allBtnList[|2];
    str2+="btn index:" + string(btnTemp.index)+" ";
    str2+="btn type:" + string(btnTemp.type)+" ";
    str2+="btn image:" + string(btnTemp.image_index)+" ";
    str2+="btn select:" + string(btnTemp.selected)+" ";
         btnTemp = id.allBtnList[|3];
    str3+="btn index:" + string(btnTemp.index)+" ";
    str3+="btn type:" + string(btnTemp.type)+" ";
    str3+="btn image:" + string(btnTemp.image_index)+" ";
    str3+="btn select:" + string(btnTemp.selected)+" ";
**/
draw_text(0,0,str);
draw_text(0,20,str1);
draw_text(0,40,str2);
draw_text(0,60,str3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (keyboard_check(ord('J'))||keyboard_check(ord('K'))||keyboard_check(ord('D'))||keyboard_check(ord('A'))||keyboard_check(ord('W'))||keyboard_check(ord('S')))
{
    switch(mode){
        
        case bkActionMode.unitSelectMode: 
           scr_clearDetail();
        break;
        
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if keyboard_check(ord('K'))
{
    switch(mode){
        case bkActionMode.selectMode: 
            var btnIdList = ds_list_create() ;
                btnIdList[|0] = 0;
                btnIdList[|1] = 1;
                btnIdList[|2] = 2;
                btnIdList[|3] = 3;
            var btnTypeList = ds_list_create() ;
                btnTypeList[|0] = 1;
                btnTypeList[|1] = 2;
                btnTypeList[|2] = 3;
                btnTypeList[|3] = 4;
            scr_biankuangBtnMode(id,btnIdList,btnTypeList);
        break;
        case bkActionMode.btnMode: 
            scr_biankuangSelectMode(id);
        break;
        case bkActionMode.unitSelectMode: 
            var select = global.instanceMap[? 'select'];
            scr_unitCancelSelect(select);
            scr_selectCancel(select);
            mode = bkActionMode.selectMode;
        break;
        case bkActionMode.unitMoveMode: 
            
        break;
        case bkActionMode.unitActiveMode:
            var select = global.instanceMap[? 'select'];
            var unit = select.actionUnit;
            scr_replaceUnit(unit);
            mode = bkActionMode.btnChangeMode;
            btnChangeNextMode = bkActionMode.unitSelectMode;
            scr_closeBtn(id);
        break;
    }
    
}
if keyboard_check(ord('J'))
{
    switch(mode){
        case bkActionMode.selectMode: 
            var select = global.instanceMap[? 'select'];
            var indexArray = scr_getSelectIndex(select);
            var unitMap = global.instanceMap[? 'unitMap'];
            var key = scr_getIndexKey(indexArray[0],indexArray[1]);
            var unit = unitMap[? key];
            if(!is_undefined(unit)){
               if(unit.operated==0){
                 scr_unitSelect(unit,select);
                 mode = bkActionMode.unitSelectMode;
               }
            }
        break;
        case bkActionMode.btnMode: 
            if(!is_undefined(selectedBtn)){
                scr_btnClick(selectedBtn);
            }
        break;
        case bkActionMode.unitSelectMode: 
            var select = global.instanceMap[? 'select'];
            scr_unitMove(select);
            mode = bkActionMode.unitMoveMode;
        break;
        case bkActionMode.unitActiveMode:
             if(!is_undefined(selectedBtn)){
                scr_btnClick(selectedBtn);
            }
        break;
        
    }
}
if keyboard_check(ord('D'))
{
    switch(mode){
        case bkActionMode.btnMode:
        case bkActionMode.unitActiveMode:
            scr_changeBtnSelect(id,2);
        break;
    }
}
if keyboard_check(ord('A'))
{
    switch(mode){
        case bkActionMode.btnMode:
        case bkActionMode.unitActiveMode:
            scr_changeBtnSelect(id,1);
        break;
    }
}
if keyboard_check(ord('M')){
   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
